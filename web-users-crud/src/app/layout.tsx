'use client';

// import type { Metadata } from "next";
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { useState } from 'react';
import Link from 'next/link';
import { Provider, useDispatch, useSelector } from 'react-redux';
import { PersistGate } from 'redux-persist/integration/react';
import { authActions, getUser, persistor, store } from '@/store';

const geistSans = Geist({
    variable: '--font-geist-sans',
    subsets: ['latin'],
});

const geistMono = Geist_Mono({
    variable: '--font-geist-mono',
    subsets: ['latin'],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const Navbar = () => {
    const user = useSelector(getUser);

    const dispatch = useDispatch();

    const logout = () => {
        dispatch(authActions.logout());
    };

    return (
        <div className="top-0 w-full bg-gray-700 flex justify-center">
            <div className="w-full max-w-[1140px] h-[40px] flex items-center justify-between px-0.5 mx-16">
                <div className="flex items-center">
                    <Link href="/users" className="font-black">
                        USERS CRUD
                    </Link>
                </div>
                {user ? (
                    <div className="flex items-center gap-4">
                        <p>
                            Logged in as <span className="font-bold">{user.email}</span>
                        </p>
                        <button
                            onClick={logout}
                            className="border-1 border-red-700 bg-red-700 px-2 rounded-sm cursor-pointer"
                        >
                            Logout
                        </button>
                    </div>
                ) : (
                    <Link href="/auth/login">
                        <button className="border-1 border-gray-50 px-2 rounded-sm cursor-pointer">
                            Log In
                        </button>
                    </Link>
                )}
            </div>
        </div>
    );
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const [queryClient] = useState(() => new QueryClient());

    return (
        <html lang="en">
            <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
                <Provider store={store}>
                    <PersistGate loading={null} persistor={persistor}>
                        <QueryClientProvider client={queryClient}>
                            <Navbar />
                            {children}
                        </QueryClientProvider>
                    </PersistGate>
                </Provider>
            </body>
        </html>
    );
}
